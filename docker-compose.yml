version: "3.8"
services:
  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    env_file: ./api/.env.docker
    restart: always
    ports:
      - 4002:4002
    depends_on:
      - mongo
    volumes:
      - cdn:/var/www/cdn/bookcars
    networks:
      - mailhog
      - mongo
      - frontend
      - backend

  mongo:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    restart: always
    environment:
      # Provide your credentials here
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: PASSWORD
    ports:
      - 27017:27017
    volumes:
      - db:/data/db # save db to a volume
    networks:
      - api
      - mailhog
      - frontend
      - backend

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    depends_on:
      - api
    ports:
      - 3001:3001
    networks:
      - api
      - mongo
      - mailhog
      - frontend

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    depends_on:
      - api
    ports:
      - 80:80
    volumes:
      - cdn:/var/www/cdn/bookcars
    networks:
      - api
      - mongo
      - mailhog
      - backend

  mailhog:
    image: mailhog/mailhog
    restart: always
    # the HTTP server starts on port 8025
    # the SMTP server starts on port 1025
    # in-memory message storage
    ports:
      - 8025:8025
    # trying to configure networks so vpn -> docker -> component can work.
    # https://docs.docker.com/reference/compose-file/networks/
    networks:
      - api
      - mongo
      - frontend
      - backend

volumes:
  cdn:
  db:
